===========================================================================================
===========================================================================================
Multiplexor with Enable:
===========================================================================================
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

---- Uncomment the following library declaration if instantiating
---- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity code is
	Port( iaSel : in STD_LOGIC_VECTOR (2 downto 0);
			iaData: in STD_LOGIC_VECTOR (7 downto 0);
			iEnable: in STD_LOGIC;
			oY: out STD_LOGIC);
end code;



architecture Behavioral of code is

begin
	
	oY <= iaData(0) when iaSel = 0 and iEnable = '1' else
		iaData(1) when iaSel = 1 and iEnable = '1' else
		iaData(2) when iaSel = 2 and iEnable = '1' else
		iaData(3) when iaSel = 3 and iEnable = '1' else
		iaData(4) when iaSel = 4 and iEnable = '1' else
		iaData(5) when iaSel = 5 and iEnable = '1' else
		iaData(6) when iaSel = 6 and iEnable = '1' else
		iaData(7) when iaSel = 7 and iEnable = '1' else
		'Z';

end Behavioral;

===========================================================================================
===========================================================================================
Multiplexor with enable and separator
===========================================================================================
----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    12:54:40 06/09/2016 
-- Design Name: 
-- Module Name:    code - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

---- Uncomment the following library declaration if instantiating
---- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity code is
	Port( iaSel : in STD_LOGIC_VECTOR (2 downto 0);
			iaData: in STD_LOGIC_VECTOR (7 downto 0);
			iEnable: in STD_LOGIC;
			oY: out STD_LOGIC);
end code;



architecture Behavioral of code is

	signal sY: STD_LOGIC;

begin
	with iaSel select
	sY <= iaData(0)when "000" ,
			iaData(1)when "001" ,
			iaData(2)when "010" ,
			iaData(3)when "011" ,
			iaData(4)when "100" ,
			iaData(5)when "101" ,
			iaData(6)when "110" ,
			iaData(7)when "111" ,
			'0' when others;
	oY <= sY when iEnable='1' else 'Z';
			
end Behavioral;
===========================================================================================
===========================================================================================



