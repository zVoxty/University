#include<mpi.h>
#include<iostream>
#include<time.h>
#include<Windows.h>
#define N 7
using namespace std;

int graf[N][N] =
{
	0,3,9,8,3,4,2,
	5,0,1,4,2,5,4,
	6,6,0,4,5,6,7,
	2,9,2,0,7,3,8,
	7,9,3,2,0,2,9,
	1,5,6,2,7,0,3,
	2,7,3,1,6,5,0
};

int main(int argc, char** argv)
{
	int size, rank, rc;

	rc = MPI_Init(&argc, &argv);

	MPI_Comm_size(MPI_COMM_WORLD, &size);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);

	for (int k = 0; k < N; k++)
	{
		for (int j = 0; j < N; j++)
			if (graf[rank][k] + graf[k][j] < graf[rank][j])
				graf[rank][j] = graf[rank][k] + graf[k][j];
				
		//MPI_Send(&graf[rank], 1, MPI_INT, 0, 0, MPI_COMM_WORLD);

		//Gathers data from all tasks and distribute the combined data to all tasks
		MPI_Allgather(graf[rank], N, MPI_INT, graf, N, MPI_INT, MPI_COMM_WORLD);
	}

	 // 0 rank print the graph
	if (rank == 0){
		//for(int i = 0; i <= N; i++){
			//MPI_Recv(&graf[rank], 1, MPI_INT, i, 0, MPI_COMM_WORLD);
		//}
		for (int i = 0; i < N; i++){
			for (int j = 0; j < N; j++)
				cout << graf[i][j] << " ";
			cout << '\n';
		}
	}

	MPI_Finalize();
	return 0;
}
